(window.webpackJsonp=window.webpackJsonp||[]).push([[303],{687:function(s,t,e){"use strict";e.r(t);var a=e(29),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"how-to-generate-address-and-private-key-wif-for-3rd-party-coins-using-passphrase"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#how-to-generate-address-and-private-key-wif-for-3rd-party-coins-using-passphrase"}},[s._v("#")]),s._v(" How to Generate Address and Private Key (WIF) for 3rd Party Coins Using Passphrase")]),s._v(" "),e("p",[s._v("While this guide is intended for Notary Node operators, other users may find it useful too.")]),s._v(" "),e("p",[s._v("Never enter your Notary Node's passphrase into any other computer/server other than your node itself for security purposes.")]),s._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("Note")]),s._v(" "),e("p",[s._v("For Notary Nodes, we will need "),e("code",[s._v("Compressed Public Key")]),s._v(" as pubkey, "),e("code",[s._v("Compressed WIF")]),s._v(" as private key and "),e("code",[s._v("Compressed Address")]),s._v(" as the public address.")])]),s._v(" "),e("h2",{attrs:{id:"install-dependencies"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install-dependencies"}},[s._v("#")]),s._v(" Install dependencies")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" update "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" upgrade -y\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" php7.2-cli php7.2-gmp php7.2-mbstring\n")])])]),e("h2",{attrs:{id:"steps"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#steps"}},[s._v("#")]),s._v(" Steps")]),s._v(" "),e("ul",[e("li",[s._v("Clone the repo: "),e("a",{attrs:{href:"https://github.com/DeckerSU/komodo_scripts",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/DeckerSU/komodo_scripts"),e("OutboundLink")],1)])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/DeckerSU/komodo_scripts\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" komodo_scripts\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" submodule init\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" submodule update --init --recursive\n")])])]),e("ul",[e("li",[e("p",[s._v("Edit "),e("code",[s._v("genkomodo.php")]),s._v(" and fill your passphrase instead of "),e("code",[s._v('$passphrase = "myverysecretandstrongpassphrase_noneabletobrute"')]),s._v(". Change only the content inside "),e("code",[s._v('""')]),s._v(" i.e., replace "),e("code",[s._v("myverysecretandstrongpassphrase_noneabletobrute")]),s._v(" with your passphrase")])]),s._v(" "),e("li",[e("p",[s._v("Execute the command: "),e("code",[s._v("php genkomodo.php")])])]),s._v(" "),e("li",[e("p",[s._v("Copy and use your required WIF and delete your passphrase from "),e("code",[s._v("genkomodo.php")]),s._v(" for security purposes.")])])]),s._v(" "),e("h2",{attrs:{id:"example-output"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-output"}},[s._v("#")]),s._v(" Example Output")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("$ php genkomodo.php\n\n             Passphrase: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'myverysecretandstrongpassphrase_noneabletobrute'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" BTC "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n         Network Prefix: 00\n  Compressed Public Key: 02a854251adfee222bede8396fed0756985d4ea905f72611740867c7a4ad6488c1\nUncompressed Public Key: 04a854251adfee222bede8396fed0756985d4ea905f72611740867c7a4ad6488c1767ae7bed159fca39dc26e2f9de31817bd32e0d6c5a870801bcd81fb7f1c2030\n            Private Key: 907ece717a8f94e07de7bf6f8b3e9f91abb8858ebf831072cdbb9016ef53bc5d\n         Compressed WIF: L24bEAJSkFCdjoQNEcboWfJdsLGLmkBgfGb4TSHnbhEmU9jenaes\n       Uncompressed WIF: 5JuvXAozwf7G7yjT7Fs2UZhFF85qS6Fez9yCfAMZzFZ7uPJvWtC\n  Compressed Address: 1M68ML9dMZZPEdrjncUCe7ZWadAGUxMNyv\nUncompressed Address: 1Py6QmcHgWsoAjTJeixtXt2uGzMVa5Ym1i\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" KMD "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n         Network Prefix: 3C\n  Compressed Public Key: 02a854251adfee222bede8396fed0756985d4ea905f72611740867c7a4ad6488c1\nUncompressed Public Key: 04a854251adfee222bede8396fed0756985d4ea905f72611740867c7a4ad6488c1767ae7bed159fca39dc26e2f9de31817bd32e0d6c5a870801bcd81fb7f1c2030\n            Private Key: 907ece717a8f94e07de7bf6f8b3e9f91abb8858ebf831072cdbb9016ef53bc5d\n         Compressed WIF: UtrRXqvRFUAtCrCTRAHPH6yroQKUrrTJRmxt2h5U4QTUN1jCxTAh\n       Uncompressed WIF: 7KYb75jv5BgrDCbmW36yhofiBy2vSLpCCWDfJ9dMdZxPWnKicJh\n  Compressed Address: RVNKRr2uxPMxJeDwFnTKjdtiLtcs7UzCZn\nUncompressed Address: RYFHVHVaHLgNEjpW7tx1dQN73Fp6Hu5EXs\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" GAME "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n         Network Prefix: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v("\n  Compressed Public Key: 02a854251adfee222bede8396fed0756985d4ea905f72611740867c7a4ad6488c1\nUncompressed Public Key: 04a854251adfee222bede8396fed0756985d4ea905f72611740867c7a4ad6488c1767ae7bed159fca39dc26e2f9de31817bd32e0d6c5a870801bcd81fb7f1c2030\n            Private Key: 907ece717a8f94e07de7bf6f8b3e9f91abb8858ebf831072cdbb9016ef53bc5d\n         Compressed WIF: Re6YxHzdQ61rmTuZFVbjmGu9Kqu8VeVJr4G1ihTPFsspAjGiErDL\n       Uncompressed WIF: 6anDDysDKposF9pFZHSzikUg3TV88rGvtSfHvrVdm9orf3EW88J\n  Compressed Address: Gdw3mTUaLRAgK7A2iZ8K4suQVnx7VRJ9rf\nUncompressed Address: Ggp1ptwEfNV6FCkbafczxeNoCA9LcND32e\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" HUSH "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n         Network Prefix: 1cb8\n  Compressed Public Key: 02a854251adfee222bede8396fed0756985d4ea905f72611740867c7a4ad6488c1\nUncompressed Public Key: 04a854251adfee222bede8396fed0756985d4ea905f72611740867c7a4ad6488c1767ae7bed159fca39dc26e2f9de31817bd32e0d6c5a870801bcd81fb7f1c2030\n            Private Key: 907ece717a8f94e07de7bf6f8b3e9f91abb8858ebf831072cdbb9016ef53bc5d\n         Compressed WIF: L24bEAJSkFCdjoQNEcboWfJdsLGLmkBgfGb4TSHnbhEmU9jenaes\n       Uncompressed WIF: 5JuvXAozwf7G7yjT7Fs2UZhFF85qS6Fez9yCfAMZzFZ7uPJvWtC\n  Compressed Address: t1dxjMfZmKtLyqGudj3HKmvfRqHMMEqgmKn\nUncompressed Address: t1gqhR72ReqfPmNWCb9n1fh8pXeYaT8Hks5\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" EMC2 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n         Network Prefix: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v("\n  Compressed Public Key: 02a854251adfee222bede8396fed0756985d4ea905f72611740867c7a4ad6488c1\nUncompressed Public Key: 04a854251adfee222bede8396fed0756985d4ea905f72611740867c7a4ad6488c1767ae7bed159fca39dc26e2f9de31817bd32e0d6c5a870801bcd81fb7f1c2030\n            Private Key: 907ece717a8f94e07de7bf6f8b3e9f91abb8858ebf831072cdbb9016ef53bc5d\n         Compressed WIF: T7trfubd9dBEWe3EnFYfj1r1pBueqqCaUUVKKEvLAfQvz3JFsNhs\n       Uncompressed WIF: 6vDezJMXr5a8bMdJd5ezFxURCbeJdthgkqNNNMNbhhsjbJoAQhU\n  Compressed Address: EdF2quz8nWrJDwTbbTTieFYUMGfPsVB5dv\nUncompressed Address: Eg7zuMSo7UAiA34ATZxQY21s3drd3WJM6h\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" GIN "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n         Network Prefix: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v("\n  Compressed Public Key: 02a854251adfee222bede8396fed0756985d4ea905f72611740867c7a4ad6488c1\nUncompressed Public Key: 04a854251adfee222bede8396fed0756985d4ea905f72611740867c7a4ad6488c1767ae7bed159fca39dc26e2f9de31817bd32e0d6c5a870801bcd81fb7f1c2030\n            Private Key: 907ece717a8f94e07de7bf6f8b3e9f91abb8858ebf831072cdbb9016ef53bc5d\n         Compressed WIF: WNejFTXR11LFx2L8wvEKEqvjHkL1D3Aa4CCBdEYQyBzbBKjPLHJQ\n       Uncompressed WIF: 7ez2sQEEbST7ZQQpZqJyF1fTM7C6wPEx4tvjjeWKa82GSwnepa2\n  Compressed Address: Gdw3mTUaLRAgK7A2iZ8K4suQVnx7VRJ9rf\nUncompressed Address: Ggp1ptwEfNV6FCkbafczxeNoCA9LcND32e\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" AYA "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n         Network Prefix: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v("\n  Compressed Public Key: 02a854251adfee222bede8396fed0756985d4ea905f72611740867c7a4ad6488c1\nUncompressed Public Key: 04a854251adfee222bede8396fed0756985d4ea905f72611740867c7a4ad6488c1767ae7bed159fca39dc26e2f9de31817bd32e0d6c5a870801bcd81fb7f1c2030\n            Private Key: 907ece717a8f94e07de7bf6f8b3e9f91abb8858ebf831072cdbb9016ef53bc5d\n         Compressed WIF: T7trfubd9dBEWe3EnFYfj1r1pBueqqCaUUVKKEvLAfQvz3JFsNhs\n       Uncompressed WIF: 6vDezJMXr5a8bMdJd5ezFxURCbeJdthgkqNNNMNbhhsjbJoAQhU\n  Compressed Address: Abrzzq1FgiDY3c4jMG8Xnzpc4E5xqktXhz\nUncompressed Address: Aejy4GTv1fXwyhfJDNdDgmHzkbHBwVxnvD\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" GleecBTC "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n         Network Prefix: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v("\n  Compressed Public Key: 02a854251adfee222bede8396fed0756985d4ea905f72611740867c7a4ad6488c1\nUncompressed Public Key: 04a854251adfee222bede8396fed0756985d4ea905f72611740867c7a4ad6488c1767ae7bed159fca39dc26e2f9de31817bd32e0d6c5a870801bcd81fb7f1c2030\n            Private Key: 907ece717a8f94e07de7bf6f8b3e9f91abb8858ebf831072cdbb9016ef53bc5d\n         Compressed WIF: AhXsCzbmiZUyMCZyPqjYMhLxBxcFBP6tQSLrCpTpfYkvjJEMthcW\n       Uncompressed WIF: 3CT2QZXzFrVzdJ81zjm5PMvTYwHbUjAVQtWRHj26My8gpHMRMYn\n  Compressed Address: FRvEp8aiCsn3rojmeJ8McW63cHBHKoxKbV\nUncompressed Address: FUoCsa3NXq6TnuLLWQd3WGZSJeNWVgWuPR\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" ETH/ERC20 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n   ETH/ERC20 Address: 0x85FE0A232fA144921d880BE72A3C5515e5C17A8c\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("Note")]),s._v(" "),e("p",[s._v("To convert from a WIF instead of a seed phrase, uncomment this line and input your WIF - https://github.com/DeckerSU/komodo_scripts/blob/master/genkomodo.php#L146-L147")])]),s._v(" "),e("h2",{attrs:{id:"wif-conversion-in-python"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#wif-conversion-in-python"}},[s._v("#")]),s._v(" WIF conversion in Python")]),s._v(" "),e("p",[s._v("The python script below will return converted WIFs for all coins with a known "),e("code",[s._v("wiftype")]),s._v(" prefix (or a specific coin if set via runtime param).\nIf the coin you need to convert is not yet available, you need to find the relevant values in the project's source code, e.g. https://github.com/KomodoPlatform/komodo/blob/810d308d0792a560f05937b7989b6868381c1dc8/src/chainparams.cpp#L197-L199\nThen PR these values to https://github.com/KomodoPlatform/coins/blob/master/coins")]),s._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/usr/bin/env python3")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" sys\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" requests\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" hashlib\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" base58\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" binascii\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("len")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sys"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("argv"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    WIF "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sys"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("argv"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    WIF "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("input")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Enter WIF: '")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\ncoin_prefixes "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" requests"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("get"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://stats.kmd.io/api/info/coin_prefixes/"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("json"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"results"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("len")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sys"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("argv"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    coin "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sys"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("argv"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" coin "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("not")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" coin_prefixes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string-interpolation"}},[e("span",{pre:!0,attrs:{class:"token string"}},[s._v('f"Error: ')]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("coin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v(' not in coin_prefixes"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        sys"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exit"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    coin "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("double_sha")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    a "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" hashlib"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sha256"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("binascii"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("unhexlify"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hexdigest"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" hashlib"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sha256"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("binascii"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("unhexlify"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hexdigest"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\npk "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" binascii"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hexlify"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("base58"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("b58decode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("WIF"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\npk_utf "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" pk"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("decode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"utf-8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" _coin "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" coin_prefixes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    prefix "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" coin_prefixes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("_coin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hex"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"wiftype"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    x_key "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" prefix "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" pk_utf\n    full_key "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" x_key "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" double_sha"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x_key"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    WIF "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" base58"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("b58encode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("binascii"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("unhexlify"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("full_key"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("decode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'utf-8'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" coin "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" coin  "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" _coin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("WIF"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string-interpolation"}},[e("span",{pre:!0,attrs:{class:"token string"}},[s._v('f"')]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("_coin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v(" WIF: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("WIF"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);